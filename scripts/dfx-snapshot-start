#!/usr/bin/env bash
set -euo pipefail

SOURCE_DIR="$(dirname "$(realpath "${BASH_SOURCE[0]}")")"

print_help() {
  cat <<-EOF

	Runs a local replica with state as saved by 
  https://github.com/dfinity/snsdemo/blob/main/bin/dfx-state-save .
  When the replica is stopped, the script restores original the state.

  The script replaces existing dfx directories after moving them to a backup.
  So if things go wrong this is potentially dangerous for your dfx state.
  A restore scripts is placed in the backup directory, which might be helpful in
  such cases.
	EOF
}

# Source the clap.bash file ---------------------------------------------------
source "$SOURCE_DIR/clap.bash"
# Define options
clap.define short=s long=snapshot desc="The snapshot .zip or .tar.xz file" variable=SNAPSHOT_ARCHIVE default="snapshot.tar.xz"
clap.define short=c long=clean desc="Extract a clean state from the .zip file, even if a directory with extracted state exists" variable=CLEAN nargs=0 default="false"
clap.define long=host desc="Passed to dfx start as --host" variable=DFX_HOST
clap.define long=domain desc="Passed to dfx start as --domain" variable=DFX_DOMAIN
# Source the output file ----------------------------------------------------------
source "$(clap.build)"

# The $() causes an extra entry in the output of `ps` so without any other script
# running, this will be 2.
# We use `ps` because pgrep doesn't include shell scripts.
# shellcheck disable=SC2009
SCRIPT_COUNT="$(ps -A -o command | grep -c "^bash .*$(basename "$0")")"

if pgrep replica || [ "$SCRIPT_COUNT" -gt 2 ]; then
  echo "ERROR: There is already a replica running. Please stop it first."
  exit 1
fi

BACKUP_DIR="$HOME/dfx-state-backup-$(date +"%Y%m%d_%H%M%S")"

RESTORE_BACKUP_SCRIPT_FILE="$BACKUP_DIR/restore.sh"

restore_backup() {
  sh "$RESTORE_BACKUP_SCRIPT_FILE"
}

# Restore the backup if the script fails or exits successfully.
trap restore_backup EXIT

CLEAN_ARG=""
if [ "$CLEAN" != "false" ]; then
  CLEAN_ARG="--clean"
fi

"$SOURCE_DIR/dfx-snapshot-install" --backup-dir "$BACKUP_DIR" --snapshot "$SNAPSHOT_ARCHIVE" "$CLEAN_ARG"

# Change to $HOME to avoid using nns-dapp dfx.json.
cd "$HOME"
echo "*********************************************************************"
echo "*                                                                   *"
echo "*  If the state was generated on a different type of machine, then  *"
echo "*  starting the replica may just hang after a panic.                *"
echo "*                                                                   *"
echo "*********************************************************************"

DFX_ARGS=()

if [ "${DFX_HOST:-}" ]; then
  DFX_ARGS+=("--host" "$DFX_HOST")
fi
if [ "${DFX_DOMAIN:-}" ]; then
  DFX_ARGS+=("--domain" "localhost" "--domain" "$DFX_DOMAIN")
fi
dfx start "${DFX_ARGS[@]}"

# The trap set above will restore the state before this script exits.
