#!/usr/bin/env bash
set -euo pipefail
SOURCE_DIR="$(dirname "$(realpath "${BASH_SOURCE[0]}")")"

print_help() {
  cat <<-EOF

	Wrapper around ic-admin to set some flags automatically.

	EOF
}

# Source the clap.bash file ---------------------------------------------------
source "$SOURCE_DIR/clap.bash"
# Define options
clap.define long=summary desc="Passed to ic-admin with --summary" variable=SUMMARY default="Proposal made via $0"
clap.define short=n long=network desc="The dfx network to use" variable=DFX_NETWORK default="local"
clap.define short=i long=identity desc="The dfx identity to use" variable=DFX_IDENTITY default="snsdemo8"
# Source the output file ----------------------------------------------------------
source "$(clap.build)"

export DFX_NETWORK
export DFX_IDENTITY

TOP_DIR="$(git rev-parse --show-toplevel)"

IDENTITY_PATH="$HOME/.config/dfx/identity/$DFX_IDENTITY"
PEM="${IDENTITY_PATH}/identity.pem"

if [[ "$DFX_NETWORK" == "local" ]]; then
  NNS_URL="http://localhost:$(
    cd ~
    dfx info webserver-port
  )"
else
  NNS_URL="$(jq -er '.networks | .[env.DFX_NETWORK].providers[0] | select (.!=null)' "$TOP_DIR/dfx.json")"
fi

PROPOSER_NEURON_ID="$("$SOURCE_DIR/get-neurons" --identity "$DFX_IDENTITY" --network "$DFX_NETWORK" --can-propose | head -n 1)"

if [[ -z "${PROPOSER_NEURON_ID:-}" ]]; then
  echo "Couldn't find a neuron, for identity ${DFX_IDENTITY}, that can propose."
  exit 1
fi

subcommand="$1"
shift

set ic-admin \
  --secret-key-pem "$PEM" \
  --nns-url "$NNS_URL" \
  "$subcommand" \
  --summary "$SUMMARY" \
  --proposer "$PROPOSER_NEURON_ID" \
  "$@"

echo
printf "%q " "$@"
echo
echo "Do you want to execute this command? [y/N]"
read -r response
if [[ "$response" =~ ^[yY] ]]; then
  "$@"
fi
