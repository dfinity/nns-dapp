#!/usr/bin/env bash
set -euo pipefail
SOURCE_DIR="$(dirname "$(realpath "${BASH_SOURCE[0]}")")"
PATH="$SOURCE_DIR:$PATH"

print_help() {
  cat <<-EOF

	Deletes Rust source code and builds the dependencies of the blank crate.

	WARNING: This deletes the 'src' dirs of your rust code.

	WARNING: Cargo uses timestamps to decide whether to rebuild a crate.
	         If you use this, make sure that when you replace the code, it has
	         fresh timestamps, and remove the dummy outputs.
	EOF
}

# Source the clap.bash file ---------------------------------------------------
source "$SOURCE_DIR/clap.bash"
# Define options
clap.define short=d long=dir desc="The package dir" variable=DFX_CRATE_DIR default="."
# Source the output file ----------------------------------------------------------
source "$(clap.build)"

cd "${DFX_CRATE_DIR:-.}"

test -e Cargo.toml || {
  echo "ERROR: Not a rust source dir: $(pwd)"
  exit 1
} >&2

# Create blank projects
yq .workspace.members[] Cargo.toml -oy | while read -r path; do
  rm -fr "${path:-cargo-has-a-blank-workspace-member}"
  cargo new "$path"
  git checkout "$path/Cargo.toml"
done
# Build
cargo build --target wasm32-unknown-unknown --release
