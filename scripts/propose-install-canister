#!/usr/bin/env bash
set -euo pipefail
SOURCE_DIR="$(dirname "$(realpath "${BASH_SOURCE[0]}")")"

print_help() {
  cat <<-EOF

	Install a wasm to a canister via proposal

	EOF
}

# Source the clap.bash file ---------------------------------------------------
source "$SOURCE_DIR/clap.bash"
# Define options
clap.define short=c long=canister desc="The name of the canister to install to" variable=CANISTER default=""
clap.define short=w long=wasm desc="The WASM file to install" variable=WASM default=""
clap.define short=m long=mode desc="The install mode to use" variable=MODE default="upgrade"
clap.define short=a long=arg-did-file desc="Optional canister args candid file" variable=ARG_DID_FILE default=""
clap.define short=n long=network desc="The dfx network to use" variable=DFX_NETWORK default="local"
clap.define short=i long=identity desc="The dfx identity to use" variable=DFX_IDENTITY default="snsdemo8"
# Source the output file ----------------------------------------------------------
source "$(clap.build)"

export DFX_NETWORK
export DFX_IDENTITY

if [[ -z "${CANISTER:-}" ]]; then
  echo "Please provide a canister name with --canister"
  exit 1
fi

if [[ -z "${WASM:-}" ]]; then
  echo "Please provide a wasm file with --wasm"
  exit 1
fi

CANISTER_ID="$(dfx canister id "$CANISTER" --network "$DFX_NETWORK")"
WASM_HASH="$(sha256sum "$WASM" | cut -d ' ' -f 1)"
SUMMARY="Upgrade canister $CANISTER with module hash $WASM_HASH"

ARG_ARGS=()
if [[ -n "${ARG_DID_FILE:-}" ]]; then
  ARG_BIN_FILE="$(mktemp "${ARG_DID_FILE}.XXXXXX.bin")"
  trap 'rm -- "$ARG_BIN_FILE"' EXIT
  didc encode "$(cat "$ARG_DID_FILE")" | xxd -r -p >"$ARG_BIN_FILE"
  ARG_ARGS=(--arg "$ARG_BIN_FILE")
fi

"$SOURCE_DIR/ic-admin-propose" \
  --identity "$DFX_IDENTITY" \
  --network "$DFX_NETWORK" \
  --summary "$SUMMARY" \
  propose-to-change-nns-canister \
  --mode "$MODE" \
  --canister-id "$CANISTER_ID" \
  --wasm-module-path "$WASM" \
  --wasm-module-sha256 "$WASM_HASH" \
  "${ARG_ARGS[@]}"
