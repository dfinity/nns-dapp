#!/bin/bash

# Original source
# https://github.com/dfinity/ckBTC-Minter-Frontend/blob/master/local_deploy.sh

dfx canister create ckbtc_test_ledger
dfx canister create ckbtc_test_minter

MINTERID="$(dfx canister id ckbtc_test_minter)"
echo "$MINTERID"
LEDGERID="$(dfx canister id ckbtc_test_ledger)"
echo "$LEDGERID"

echo "Step 2: deploying minter canister..."
dfx deploy ckbtc_test_minter --argument "(record {
    btc_network = variant { Regtest };
    ledger_id = principal \"$LEDGERID\";
    ecdsa_key_name = \"dfx_test_key\";
    retrieve_btc_min_fee = 0;
    retrieve_btc_min_amount = 0;
    mode = variant { GeneralAvailability };
    max_time_in_queue_nanos = 420_000_000_000;
})" --mode=reinstall

echo "Step 3: deploying ledger canister..."
PRINCIPAL="$(dfx identity get-principal)"
dfx deploy ckbtc_test_ledger --argument "(record {
    token_symbol = \"ckBTC\";
    token_name = \"Token ckBTC\";
    minting_account = record { owner = principal \"$MINTERID\" };
    transfer_fee = 0;
    metadata = vec {};
    initial_balances = vec { record { record { owner = principal \"$PRINCIPAL\"; }; 10_000_000; }; };
    archive_options = record {
        num_blocks_to_archive = 10_000;
        trigger_threshold = 20_000;
        controller_id = principal \"$PRINCIPAL\";
        cycles_for_archive_creation = opt 4_000_000_000_000;
    };
})" --mode=reinstall

echo "Step 4: deploying index canister..."
dfx deploy ckbtc_test_index --argument "(record { ledger_id = principal \"$LEDGERID\" })" --mode=reinstall

# Example to mint ckBTC

# BTCADDRESS="$(dfx canister call ckbtc_test_minter get_btc_address '(record {subaccount=null;})')"
# dfx canister call ckbtc_test_minter update_balance '(record {subaccount=null;})'
# WITHDRAWALADDRESS="$(dfx canister call ckbtc_test_minter get_withdrawal_account)"
# echo $BTCADDRESS
# echo $WITHDRAWALADDRESS
#
# cleaned_output=$(echo $WITHDRAWALADDRESS | sed -re 's/^\(|, \)$//g')
#
# dfx canister call ckbtc_test_ledger icrc1_transfer "(record {from=null; to=$cleaned_output; amount=1000000; fee=null; memo=null; created_at_time=null;})"
#
# Execute the command to get the input string and save the result
# dfx canister call ckbtc_test_minter retrieve_btc '(record {fee = null; address="bcrt1qu9za0uzzd3kjjecgv7waqq0ynn8dl8l538q0xl"; amount=10000})'

echo "Step 5: transfer ckBTC to principal..."
# record { owner= principal “”;}
dfx canister call ckbtc_test_ledger icrc1_transfer "(record {from=null; to=record { owner= principal \"zapga-qy4oi-6wufm-hyjvl-tgcuy-6jfcn-zcfeh-i7yap-aupxz-s2bj7-cae\";}; amount=1000000; fee=null; memo=null; created_at_time=null;})"
