#!/usr/bin/env bash
set -euo pipefail
SOURCE_DIR="$(dirname "$(realpath "${BASH_SOURCE[0]}")")"
PATH="$SOURCE_DIR:$PATH"

print_help() {
  cat <<-EOF

	Tests whether dfx-nns-proposal-args is able to get proposal args.
	EOF
}

# Source the clap.bash file ---------------------------------------------------
source "$SOURCE_DIR/clap.bash"
# Define options
# Source the output file ----------------------------------------------------------
source "$(clap.build)"

PROPOSAL_IDS=(123010)
arg_tempfile() {
  echo ",dfx-nns-proposal-args.test.${1}"
}

for proposal_id in "${PROPOSAL_IDS[@]}"; do
  (
    echo "Proposal $proposal_id should have a JSON output including FEATURE_FLAGS"
    # Note: This holds because the NNS-dapp args include FEATURE_FLAGS; other canister upgrade proposals
    #       may have different args or none at all.
    if scripts/dfx-nns-proposal-args --network ic --proposal 123010 --format json | jq '.' | grep -wq FEATURE_FLAGS; then
      echo "OK: JSON output looks plausible"
    else
      {
        echo "ERROR: JSON output should contain human readable data.  In this example, the human readable data should include FEATURE_FLAGS."
        exit 1
      } >&2

    fi
  )
done
