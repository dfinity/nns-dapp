#!/usr/bin/env bash
set -euo pipefail
cd "$(dirname "$(realpath "$0")")/.."

# Get the asset
if test -n "${1:-}"; then
  DOWNLOAD_PATH="$1"
  DOWNLOAD_FILENAME="$(basename "$DOWNLOAD_PATH")"
else
  # Prompts the user to download the wasm file.  Note:  This cannot be done with a simple curl.
  DOWNLOADS_DIR="$HOME/Downloads"
  echo
  echo "Please download a testnet backend wasm module from:  https://github.com/dfinity/nns-dapp/actions/workflows/docker-build.yaml"
  read -rn 1 -p "Press enter when done .... "
  echo
  read -rn 1 -p "What is your download dir? (default '$DOWNLOADS_DIR'): " ALT_DOWNLOADS_DIR
  DOWNLOADS_DIR="${ALT_DOWNLOADS_DIR:-$DOWNLOADS_DIR}"

  # Gets the most recent 'Backend wasm module' download:
  # shellcheck disable=SC2010 # we really do want this, not globbing.
  DOWNLOAD_FILENAME="$(ls -t "$DOWNLOADS_DIR" | grep -E '.*backend wasm module( [(][0-9]+[)])?.zip$' | head -n1)"
  DOWNLOAD_PATH="$DOWNLOADS_DIR/$DOWNLOAD_FILENAME"
  echo "Sourcing WASM from: $DOWNLOAD_PATH"
fi

WASM_PATH="$(jq -rc '.canisters["nns-dapp"].wasm' dfx.json)"
WASM_FILENAME="nns-dapp.wasm"
UNZIP_TMPDIR="$(mktemp -d)"
mkdir -p "$(dirname "$WASM_PATH")"
cp "$DOWNLOAD_PATH" "$UNZIP_TMPDIR"
pushd "$UNZIP_TMPDIR"
unzip "$DOWNLOAD_FILENAME"
popd
mv "$UNZIP_TMPDIR/$WASM_FILENAME" "$WASM_PATH"
rm -fr "${UNZIP_TMPDIR}"
DEPLOY_ENV=nobuild dfx deploy --network testnet

echo "Deployed to: https://$(jq -jc '.["nns-dapp"].testnet' canister_ids.json).nnsdapp.dfinity.network"
