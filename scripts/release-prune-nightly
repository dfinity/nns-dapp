#!/usr/bin/env bash
set -euo pipefail
SOURCE_DIR="$(dirname "$(realpath "${BASH_SOURCE[0]}")")"

FROM_MONTHS=2
UNTIL_MONTHS=10

print_help() {
  cat <<-EOF

	Deletes nightly releases that are ${FROM_MONTHS}..${UNTIL_MONTHS} months old.

	You will be prompted for every deletion.
	EOF
}

# Source the clap.bash file ---------------------------------------------------
source "$SOURCE_DIR/clap.bash"
# Define options
clap.define short=y long=yes desc="Delete releases without confirmation" variable=DFX_YES nargs=0
# Source the output file ----------------------------------------------------------
source "$(clap.build)"

list_removal_candidates() {
  for tag_name_prefix in $(seq "${FROM_MONTHS}" "${UNTIL_MONTHS}" | xargs -I{} date -d "{} months ago" +'nightly-%Y-%m'); do grep -Eo "\\<${tag_name_prefix}-[0-9]*\\>" ,release_list; done | sort | uniq
}

gh release list --limit 500 >,release_list
for release_name in $(list_removal_candidates); do
  gh release delete ${DFX_YES:+--yes} "$release_name" || true
done
cat <<EOF

Finished deleting old nightly builds.

Please also consider reviewing draft releases.  Some may have been
created for testing and may no longer be needed.

EOF
grep Draft ,release_list
