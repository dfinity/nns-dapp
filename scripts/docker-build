#!/usr/bin/env bash
# vim: ft=bash
# Build nns-dapp.wasm inside docker. This outputs a single file, nns-dapp.wasm,
# in the top-level directory.

set -euo pipefail

SCRIPTS_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"

cd "$SCRIPTS_DIR/.."

DEPLOY_ENV=${DEPLOY_ENV:-mainnet}

case "$DEPLOY_ENV" in
mainnet)
  OWN_CANISTER_ID=""
  ;;
"local")
  OWN_CANISTER_ID=${OWN_CANISTER_ID:-rwlgt-iiaaa-aaaaa-aaaaa-cai}
  ;;
*)
  echo "don't know how to set OWN_CANISTER_ID for DEPLOY_ENV $DEPLOY_ENV"
  echo "please set the environment variable OWN_CANISTER_ID"
  exit 1
  ;;
esac

REDIRECT_TO_LEGACY=${REDIRECT_TO_LEGACY:-true}

echo "DEPLOY_ENV: $DEPLOY_ENV"
echo "OWN_CANISTER_ID: $OWN_CANISTER_ID"
echo "REDIRECT_TO_LEGACY: $REDIRECT_TO_LEGACY"
echo "PWD: $PWD"

image_name="nns-dapp-$DEPLOY_ENV"

echo "The following image name will be used: $image_name"

# All the files in the final docker stage will be copied to this directory:
OUTDIR=out
rm -rf "${OUTDIR:-not-the-file-you-were-looking-for}"
# These files will be copied out of OUTDIR into the repository root.
# In normal production builds, only these files will be generated,
# but a small code change can easily produce much more.  We ensure that
# even in such circumstances only expected files end up in ./.
assets=(assets.tar.xz nns-dapp.wasm build-inputs.txt)

set -x
DOCKER_BUILDKIT=1 docker build \
  --target scratch \
  --build-arg DEPLOY_ENV="$DEPLOY_ENV" \
  --build-arg OWN_CANISTER_ID="$OWN_CANISTER_ID" \
  -t "$image_name" \
  -o "$OUTDIR" .
set +x

for file in "${assets[@]}"; do
  cp "$OUTDIR/$file" "$file"
  shasum -a 256 "$file"
done

untracked_inputs() {
  comm -1 -3 <(git ls-files | sort) <(sort out/build-inputs.txt)
}
if untracked_inputs | grep -q .; then
  echo WARNING: BUILD MAY NOT BE REPRODUCIBLE
  echo The following files were included in the build but are not tracked by git:
  untracked_inputs | sed 's/^/    /g'
  echo Please remove or commit these files.
  exit 2
fi

echo FIN
