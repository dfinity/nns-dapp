#!/usr/bin/env bash
set -euo pipefail

SOURCE_DIR="$(dirname "${BASH_SOURCE[0]}")"

# Source the clap.bash file ---------------------------------------------------
source "$SOURCE_DIR/../clap.bash"
# Define options
clap.define long=update desc="A test to update so it passes again" variable=UPDATE_TEST default=""
# Source the output file ------------------------------------------------------
source "$(clap.build)"

test_with_data() {
  test_name="$1"
  if [ "${UPDATE_TEST:-$test_name}" != "$test_name" ]; then
    echo "SKIPPED $test_name"
    return
  fi
  json_file="$SOURCE_DIR/$test_name.json"
  expectedExitCode="$(jq -r '.expectedExitCode' "$json_file")"
  expectedOutput="$(jq -r '.expectedOutput[]' "$json_file")"

  mapfile -t args < <(jq -r '.args[]' "$json_file")

  set +e
  actualOutput="$("$SOURCE_DIR/release-sop" "${args[@]}" --mock-json "$json_file" 2>&1)"
  actualExitCode="$?"
  set -e

  if ! diff <(echo "$actualOutput") <(echo "$expectedOutput"); then
    if [ "${UPDATE_TEST:-}" = "$test_name" ]; then
      jq -r --arg actualOutput "$actualOutput" '.expectedOutput = ($actualOutput | split("\n"))' "$json_file" | sponge "$json_file"
      echo "UPDATED $test_name"
    else
      (
        echo "ERROR: actual output differs from expected output. See diff above."
        echo "Run '"$0" --update $test_name' to update the test."
        echo "FAILED: $1"
      ) >&2
      exit 1
    fi
  fi

  if [ "$actualExitCode" != "$expectedExitCode" ]; then
    echo "Expected exit code $expectedExitCode, got $actualExitCode" >&2
    echo "FAILED: $1"
    exit 1
  fi

  echo "PASSED: $1"
}

test_with_data "release-sop-test-no-args"
test_with_data "release-sop-test-new-and-continue"
test_with_data "release-sop-test-invalid-name"
test_with_data "release-sop-test-branch-exists"
test_with_data "release-sop-test-uncommitted-changes"
test_with_data "release-sop-test-continue-with-name"
test_with_data "release-sop-test-continue-invalid-branch"
test_with_data "release-sop-test-successful-release"
# This relies on the checklist from the release-sop-test-successful-release
test_with_data "release-sop-test-continue-after-success"
