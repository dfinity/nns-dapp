#!/usr/bin/env bash
set -euo pipefail
SOURCE_DIR="$(dirname "$(realpath "${BASH_SOURCE[0]}")")"
PATH="$SOURCE_DIR:$PATH"

# Source the clap.bash file ---------------------------------------------------
source "$SOURCE_DIR/clap.bash"
# Define options
clap.define short=n long=network desc="The dfx network to use" variable=DFX_NETWORK default="local"
clap.define short=i long=canister_id desc="The ID of the canister" variable=DFX_CANISTER_ID
clap.define short=N long=canister_name desc="The name of the canister" variable=DFX_CANISTER_NAME
# Source the output file ----------------------------------------------------------
source "$(clap.build)"



#!/usr/bin/env bash
set -euo pipefail
cd "$(dirname "$0")/../../.."

NEURON_PATH="$HOME/.config/dfx/prod-neuron"
if test -e "$NEURON_PATH"; then
  NEURON="$(cat "$NEURON_PATH")"
  echo "Neuron ID: $NEURON (from $NEURON_PATH)"
else
  read -rp "Please enter your Neuron ID: " NEURON
  read -rp "... Store the Neuron ID for future use? (y/N)" STORE_NEURON
  [[ "$STORE_NEURON" != [yY] ]] || {
    mkdir -p "$(dirname "$NEURON_PATH")"
    printf "%s" "$NEURON" >"$NEURON_PATH"
  }
fi

read -rp "HSM Pin: " DFX_HSM_PIN

NNS_DAPP_CANISTER_ID="$(dfx canister id nns-dapp --network mainnet)"
if [[ "${DFX_NETWORK:-}" =~ mainnet|ic ]] ; then
	[[ "${NNS_DAPP_CANISTER_ID:-}" == "qoctq-giaaa-aaaaa-aaaea-cai" ]] || {
	echo "ERROR: Has the mainnet nns-dapp canister ID really changed?"
	echo "       If so, please update this script: '${BASH_SOURCE[0]}'"
	exit 1
} >&2
fi

WASM="./release/docker/nns-dapp.wasm"
SHA="$(sha256sum <"$WASM" | awk '{print $1}')"

ARG_DID="./release/nns_dapp_arg.did"
ARG_PATH="./release/nns_dapp_arg.bin"
didc encode "$(cat "$ARG_DID")" | xxd -r -p >"$ARG_PATH"

set ic-admin --pin "$DFX_HSM_PIN" --nns-url https://ic0.app --use-hsm --key-id 01 --slot 0 propose-to-change-nns-canister --proposer "$NEURON" --canister-id "$AGGREGATOR_CANISTER_ID" --mode upgrade --wasm-module-path "$WASM" --summary-file ./release/AGGREGATOR_PROPOSAL.md --wasm-module-sha256 "$SHA" --arg "$ARG_PATH"

echo
echo PLEASE REVIEW THIS COMMAND:
echo
echo "${@}"
echo

read -rp "Execute? (y/N)" COMMAND_OK
if [[ "$COMMAND_OK" = [yY] ]]; then
  "${@}"
fi
