#!/usr/bin/env bash
set -euo pipefail
SOURCE_DIR="$(dirname "$(realpath "${BASH_SOURCE[0]}")")/../.."
. "$SOURCE_DIR/network-config"

SWAP_CANISTER_NAME="swap_canister"

help_text() {
  cat <<-EOF
	Starts an SNS swap.

	Flags:
	--dfx-network <DFX_NETWORK>
	  The network in dfx.json with the swap canister.
	  Default: None, this is required.

	--swap-canister <SWAP_CANISTER_ID>
	  The swap canister ID.
	  Default: The '${SWAP_CANISTER_NAME}' entry in 'canister_ids.json'

	--title <TITLE>
	  The title of the proposal
	  Default: Something meaningless

	--url <URL>
	  The URL of a page describing the SNS
	  Default: Something meaningless

	--proposer <PROPOSER_NEURON_ID>
	  The proposing neuron ID.
	  Default: Interactive commands to set up a neuron and hotkey.

	Env vars:
	  DFX_NETWORK
	  SWAP_CANISTER_ID
	  TITLE
	  URL
	  PROPOSER_NEURON_ID
	EOF
}

dfx_network_check_specified() {
  test -n "${DFX_NETWORK:-}" || {
    echo "ERROR: DFX_NETWORK not set.  Please use: --dfx-network <DFX_NETWORK>" >&2
    exit 1
  }
}

while (($# > 0)); do
  arg="$1"
  shift 1
  case "$arg" in
  --help)
    help_text
    exit 0
    ;;
  --dfx-network)
    DFX_NETWORK="$1"
    shift 1
    ;;
  --proposer)
    PROPOSER_NEURON_ID="${1:-}"
    shift 1
    ;;
  --title)
    TITLE="${1:-}"
    shift 1
    ;;
  --url)
    URL="${1:-}"
    shift 1
    ;;
  *)
    cat <<-EOF >&2
	ERROR: Unrecognised argument: '$arg'
	Please use --help for usage.
	EOF
    exit 1
    ;;
  esac
done

dfx_network_check_specified
DFX_NETWORK="$DFX_NETWORK" assert_dfx_network_var_is_configured || exit 1 # Assert defined in `./scripts/network-config`.

: "Tell the user how to set up a neuron, if none has been provided."
test -n "${PROPOSER_NEURON_ID:-}" || {
  echo
  echo "Please create a neuron, e.g. in the nns-dapp front end."
  read -rp "Press enter when done... " _
  echo
  read -rp "Please enter the ID of the neuron: " PROPOSER_NEURON_ID
  echo
  echo "Please add $(dfx identity --network "$DFX_NETWORK" get-principal) as a hotkey to the neuron."
  read -rp "Press enter when done... " _
}

test -n "${SWAP_CANISTER_ID:-}" || SWAP_CANISTER_ID="$(dfx canister --network "$DFX_NETWORK" id sns_swap)"

dfx canister --network "$DFX_NETWORK" call nns-governance manage_neuron --argument-file - <<EOF
(
        record {
                id = opt record {
                        id = $PROPOSER_NEURON_ID : nat64
                };
                command = opt variant {
                        MakeProposal = record {
                                url = "${URL:-http://...}";
                                title = opt "${TITLE:-my title}";
                                summary = "${SUMMARY:-summary}";
                                action = opt variant{ SetSnsTokenSwapOpenTimeWindow = record {
                                        swap_canister_id = opt principal "$SWAP_CANISTER_ID";
                                        request = opt record { open_time_window = opt record {
                                                start_timestamp_seconds=$(($(date +%s) + 60 * 5)): nat64;
                                                end_timestamp_seconds=$(($(date +%s) + 60 * 60 * 24 * 6)): nat64;
                                        } }
                                } }
                        }
                }
        }
)
EOF
