import type { GovernanceCachedMetrics } from "@dfinity/nns";

export const mockGovernanceMetrics: GovernanceCachedMetrics = {
  communityFundTotalMaturityE8sEquivalent: 4n,
  communityFundTotalStakedE8s: 8n,
  decliningVotingPowerNeuronSubsetMetrics: {
    count: undefined,
    countBuckets: [[1n, 2n]],
    decidingVotingPowerBuckets: [[1n, 2n]],
    maturityE8sEquivalentBuckets: [[1n, 2n]],
    potentialVotingPowerBuckets: [[1n, 2n]],
    stakedE8sBuckets: [[1n, 2n]],
    stakedMaturityE8sEquivalentBuckets: [[1n, 2n]],
    totalDecidingVotingPower: 7n,
    totalMaturityE8sEquivalent: 100n,
    totalPotentialVotingPower: 7n,
    totalStakedE8s: 2n,
    totalStakedMaturityE8sEquivalent: 7n,
    totalVotingPower: 7n,
    votingPowerBuckets: [[1n, 2n]],
  },
  dissolvedNeuronsCount: 20n,
  dissolvedNeuronsE8s: 3n,
  dissolvingNeuronsCount: 8n,
  dissolvingNeuronsCountBuckets: [],
  dissolvingNeuronsE8sBuckets: [],
  dissolvingNeuronsE8sBucketsEct: [],
  dissolvingNeuronsE8sBucketsSeed: [],
  dissolvingNeuronsStakedMaturityE8sEquivalentBuckets: [[1n, 2]],
  dissolvingNeuronsStakedMaturityE8sEquivalentSum: 50000n,
  ectNeuronCount: 100n,
  fullyLostVotingPowerNeuronSubsetMetrics: {
    count: undefined,
    countBuckets: [[1n, 2n]],
    decidingVotingPowerBuckets: [[1n, 2n]],
    maturityE8sEquivalentBuckets: [[1n, 2n]],
    potentialVotingPowerBuckets: [[1n, 2n]],
    stakedE8sBuckets: [[1n, 2n]],
    stakedMaturityE8sEquivalentBuckets: [[1n, 2n]],
    totalDecidingVotingPower: 7n,
    totalMaturityE8sEquivalent: 100n,
    totalPotentialVotingPower: 7n,
    totalStakedE8s: 2n,
    totalStakedMaturityE8sEquivalent: 7n,
    totalVotingPower: 7n,
    votingPowerBuckets: [[1n, 2n]],
  },
  garbageCollectableNeuronsCount: 5n,
  neuronsFundTotalActiveNeurons: 3n,
  neuronsWithInvalidStakeCount: 3n,
  neuronsWithLessThan6MonthsDissolveDelayCount: 10n,
  neuronsWithLessThan6MonthsDissolveDelayE8s: 3n,
  nonSelfAuthenticatingControllerNeuronSubsetMetrics: {
    count: undefined,
    countBuckets: [[1n, 2n]],
    decidingVotingPowerBuckets: [[1n, 2n]],
    maturityE8sEquivalentBuckets: [[1n, 2n]],
    potentialVotingPowerBuckets: [[1n, 2n]],
    stakedE8sBuckets: [[1n, 2n]],
    stakedMaturityE8sEquivalentBuckets: [[1n, 2n]],
    totalDecidingVotingPower: 7n,
    totalMaturityE8sEquivalent: 100n,
    totalPotentialVotingPower: 7n,
    totalStakedE8s: 2n,
    totalStakedMaturityE8sEquivalent: 7n,
    totalVotingPower: 7n,
    votingPowerBuckets: [[1n, 2n]],
  },
  notDissolvingNeuronsCount: 100n,
  notDissolvingNeuronsCountBuckets: [[2n, 2n]],
  notDissolvingNeuronsE8sBuckets: [[10n, 1]],
  notDissolvingNeuronsE8sBucketsEct: [],
  notDissolvingNeuronsE8sBucketsSeed: [],
  notDissolvingNeuronsStakedMaturityE8sEquivalentBuckets: [],
  notDissolvingNeuronsStakedMaturityE8sEquivalentSum: 3n,
  publicNeuronSubsetMetrics: {
    count: undefined,
    countBuckets: [[1n, 2n]],
    decidingVotingPowerBuckets: [[1n, 2n]],
    maturityE8sEquivalentBuckets: [[1n, 2n]],
    potentialVotingPowerBuckets: [[1n, 2n]],
    stakedE8sBuckets: [[1n, 2n]],
    stakedMaturityE8sEquivalentBuckets: [[1n, 2n]],
    totalDecidingVotingPower: 7n,
    totalMaturityE8sEquivalent: 100n,
    totalPotentialVotingPower: 7n,
    totalStakedE8s: 2n,
    totalStakedMaturityE8sEquivalent: 7n,
    totalVotingPower: 7n,
    votingPowerBuckets: [[1n, 2n]],
  },
  seedNeuronCount: 8n,
  timestampSeconds: 8n,
  totalLockedE8s: 3n,
  totalMaturityE8sEquivalent: 100000000000n,
  totalStakedE8s: 4n,
  totalStakedE8sEct: 3n,
  totalStakedE8sNonSelfAuthenticatingController: undefined,
  totalStakedE8sSeed: 4n,
  totalStakedMaturityE8sEquivalent: 3n,
  totalStakedMaturityE8sEquivalentEct: 4n,
  totalStakedMaturityE8sEquivalentSeed: 8n,
  totalSupplyIcp: 1000000n,
  totalVotingPowerNonSelfAuthenticatingController: undefined,
};
