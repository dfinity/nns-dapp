diff --git b/rs/sns_aggregator/src/types/ic_sns_ledger.rs a/rs/sns_aggregator/src/types/ic_sns_ledger.rs
index 05042e186..dd77268d5 100644
--- b/rs/sns_aggregator/src/types/ic_sns_ledger.rs
+++ a/rs/sns_aggregator/src/types/ic_sns_ledger.rs
@@ -95,23 +95,21 @@ pub struct BlockRange {
     pub blocks: Vec<Block>,
 }
 
-candid::define_function!(pub QueryBlockArchiveFn : (GetBlocksArgs) -> (
-    BlockRange,
-  ) query);
-#[derive(CandidType, Deserialize, Serialize, Clone, Debug)]
-pub struct GetBlocksResponse_archived_blocks_item {
+pub type QueryBlockArchiveFn = candid::Func;
+#[derive(CandidType, Deserialize)]
+pub struct GetBlocksResponse_archived_blocks_inner {
     pub callback: QueryBlockArchiveFn,
     pub start: BlockIndex,
     pub length: candid::Nat,
 }
 
-#[derive(CandidType, Deserialize, Serialize, Clone, Debug)]
+#[derive(CandidType, Deserialize)]
 pub struct GetBlocksResponse {
     pub certificate: Option<serde_bytes::ByteBuf>,
     pub first_index: BlockIndex,
     pub blocks: Vec<Block>,
     pub chain_length: u64,
-    pub archived_blocks: Vec<GetBlocksResponse_archived_blocks_item>,
+    pub archived_blocks: Vec<GetBlocksResponse_archived_blocks_inner>,
 }
 
 #[derive(CandidType, Deserialize, Serialize, Clone, Debug)]
@@ -167,27 +165,25 @@ pub struct TransactionRange {
     pub transactions: Vec<Transaction>,
 }
 
-candid::define_function!(pub QueryArchiveFn : (GetTransactionsRequest) -> (
-    TransactionRange,
-  ) query);
-#[derive(CandidType, Deserialize, Serialize, Clone, Debug)]
-pub struct GetTransactionsResponse_archived_transactions_item {
+pub type QueryArchiveFn = candid::Func;
+#[derive(CandidType, Deserialize)]
+pub struct GetTransactionsResponse_archived_transactions_inner {
     pub callback: QueryArchiveFn,
     pub start: TxIndex,
     pub length: candid::Nat,
 }
 
-#[derive(CandidType, Deserialize, Serialize, Clone, Debug)]
+#[derive(CandidType, Deserialize)]
 pub struct GetTransactionsResponse {
     pub first_index: TxIndex,
     pub log_length: candid::Nat,
     pub transactions: Vec<Transaction>,
-    pub archived_transactions: Vec<GetTransactionsResponse_archived_transactions_item>,
+    pub archived_transactions: Vec<GetTransactionsResponse_archived_transactions_inner>,
 }
 
 pub type Tokens = candid::Nat;
 #[derive(CandidType, Deserialize, Serialize, Clone, Debug)]
-pub struct icrc1_supported_standards_ret0_item {
+pub struct icrc1_supported_standards_ret0_inner {
     pub url: String,
     pub name: String,
 }
@@ -250,7 +246,7 @@ impl SERVICE {
     pub async fn icrc1_name(&self) -> CallResult<(String,)> {
         ic_cdk::call(self.0, "icrc1_name", ()).await
     }
-    pub async fn icrc1_supported_standards(&self) -> CallResult<(Vec<icrc1_supported_standards_ret0_item>,)> {
+    pub async fn icrc1_supported_standards(&self) -> CallResult<(Vec<icrc1_supported_standards_ret0_inner>,)> {
         ic_cdk::call(self.0, "icrc1_supported_standards", ()).await
     }
     pub async fn icrc1_symbol(&self) -> CallResult<(String,)> {
