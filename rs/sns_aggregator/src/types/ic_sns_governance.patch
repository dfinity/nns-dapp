diff --git b/rs/sns_aggregator/src/types/ic_sns_governance.rs a/rs/sns_aggregator/src/types/ic_sns_governance.rs
index 66418e9ff..92c48c6f4 100644
--- b/rs/sns_aggregator/src/types/ic_sns_governance.rs
+++ a/rs/sns_aggregator/src/types/ic_sns_governance.rs
@@ -11,6 +11,7 @@ use ic_cdk::api::call::CallResult;
 // use ic_cdk::export::candid::{self, CandidType, Deserialize, Serialize, Clone, Debug};
 // use ic_cdk::api::call::CallResult;
 
+
 #[derive(CandidType, Deserialize, Serialize, Clone, Debug)]
 pub struct GenericNervousSystemFunction {
   pub  validator_canister_id: Option<candid::Principal>,
@@ -21,7 +22,7 @@ pub struct GenericNervousSystemFunction {
 
 #[derive(CandidType, Deserialize, Serialize, Clone, Debug)]
 pub enum FunctionType {
-  NativeNervousSystemFunction{},
+  NativeNervousSystemFunction(EmptyRecord),
   GenericNervousSystemFunction(GenericNervousSystemFunction),
 }
 
@@ -193,12 +194,12 @@ pub enum Action {
   ManageNervousSystemParameters(NervousSystemParameters),
   AddGenericNervousSystemFunction(NervousSystemFunction),
   RemoveGenericNervousSystemFunction(u64),
-  UpgradeSnsToNextVersion{},
+  UpgradeSnsToNextVersion(EmptyRecord),
   RegisterDappCanisters(RegisterDappCanisters),
   TransferSnsTreasuryFunds(TransferSnsTreasuryFunds),
   UpgradeSnsControlledCanister(UpgradeSnsControlledCanister),
   DeregisterDappCanisters(DeregisterDappCanisters),
-  Unspecified{},
+  Unspecified(EmptyRecord),
   ManageSnsMetadata(ManageSnsMetadata),
   ExecuteGenericNervousSystemFunction(ExecuteGenericNervousSystemFunction),
   Motion(Motion),
@@ -270,8 +271,8 @@ pub struct SetDissolveTimestamp { dissolve_timestamp_seconds: u64 }
 #[derive(CandidType, Deserialize, Serialize, Clone, Debug)]
 pub enum Operation {
   ChangeAutoStakeMaturity(ChangeAutoStakeMaturity),
-  StopDissolving{},
-  StartDissolving{},
+  StopDissolving(EmptyRecord),
+  StartDissolving(EmptyRecord),
   IncreaseDissolveDelay(IncreaseDissolveDelay),
   SetDissolveTimestamp(SetDissolveTimestamp),
 }
@@ -292,7 +293,7 @@ pub struct FinalizeDisburseMaturity {
 pub struct MemoAndController { controller: Option<candid::Principal>, memo: u64 }
 
 #[derive(CandidType, Deserialize, Serialize, Clone, Debug)]
-pub enum By { MemoAndController(MemoAndController), NeuronId{} }
+pub enum By { MemoAndController(MemoAndController), NeuronId(EmptyRecord) }
 
 #[derive(CandidType, Deserialize, Serialize, Clone, Debug)]
 pub struct ClaimOrRefresh { by: Option<By> }
@@ -325,7 +326,7 @@ pub enum Command_2 {
   DisburseMaturity(DisburseMaturity),
   Configure(Configure),
   RegisterVote(RegisterVote),
-  SyncCommand{},
+  SyncCommand(EmptyRecord),
   MakeProposal(Proposal),
   FinalizeDisburseMaturity(FinalizeDisburseMaturity),
   ClaimOrRefreshNeuron(ClaimOrRefresh),
@@ -443,7 +444,7 @@ pub struct GetMaturityModulationResponse {
 #[derive(CandidType, Deserialize, Serialize, Clone, Debug)]
 pub struct get_metadata_arg0 {}
 
-#[derive(CandidType, Deserialize, Serialize, Clone, Debug)]
+#[derive(CandidType, Deserialize, Serialize, Clone, Debug, Default)]
 pub struct GetMetadataResponse {
   pub  url: Option<String>,
   pub  logo: Option<String>,
@@ -513,7 +514,7 @@ pub struct GetSnsInitializationParametersResponse {
   pub  sns_initialization_parameters: String,
 }
 
-#[derive(CandidType, Deserialize, Serialize, Clone, Debug)]
+#[derive(CandidType, Deserialize, Serialize, Clone, Debug, Default)]
 pub struct ListNervousSystemFunctionsResponse {
   pub  reserved_ids: Vec<u64>,
   pub  functions: Vec<NervousSystemFunction>,
@@ -585,17 +586,17 @@ pub struct DisburseResponse { transfer_block_height: u64 }
 pub enum Command_1 {
   Error(GovernanceError),
   Split(SplitResponse),
-  Follow{},
+  Follow(EmptyRecord),
   DisburseMaturity(DisburseMaturityResponse),
   ClaimOrRefresh(ClaimOrRefreshResponse),
-  Configure{},
-  RegisterVote{},
+  Configure(EmptyRecord),
+  RegisterVote(EmptyRecord),
   MakeProposal(GetProposal),
-  RemoveNeuronPermission{},
+  RemoveNeuronPermission(EmptyRecord),
   StakeMaturity(StakeMaturityResponse),
   MergeMaturity(MergeMaturityResponse),
   Disburse(DisburseResponse),
-  AddNeuronPermission{},
+  AddNeuronPermission(EmptyRecord),
 }
 
 #[derive(CandidType, Deserialize, Serialize, Clone, Debug)]
