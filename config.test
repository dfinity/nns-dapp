#!/usr/bin/env bash
set -euo pipefail

JSON_CONFIG="deployment-config.json"
ENV_CONFIG="frontend/.env"
arg_config() {
  echo "nns-dapp-arg-${DFX_NETWORK}.did"
}

clean_config() {
  ALL_CONFIG=("$JSON_CONFIG" "$ENV_CONFIG" "$(arg_config)")
  rm -f "${ALL_CONFIG[@]}"
}

(
  echo "Compare generated config against expected values for specific networks"
  ./scripts/nns-dapp/test-config
)
# TODO: Updating golden files is broken for this test. Fix it.
# (
#   echo "Compare generated config with local deployments"
#   # Note: Unlike on mainnet, canister IDs can change.  The test will adapt the expected values with the actual canister ID.
#   # We will deploy twice to make sure that the local canister ID changes.
#   dfx start --clean --background
#   for ((i = 0; i < 2; i++)); do
#     dfx canister create nns-dapp
#     scripts/nns-dapp/test-config --network local
#     dfx canister delete nns-dapp --yes
#   done
# )
(
  echo "Network parameter is in config"
  for DFX_NETWORK in mainnet local; do
    clean_config
    DFX_NETWORK="$DFX_NETWORK" ./config.sh
    : "Check value in JSON"
    JSON_NETWORK="$(jq -r .DFX_NETWORK "$JSON_CONFIG")"
    [[ "$DFX_NETWORK" == "$JSON_NETWORK" ]] || {
      printf "ERROR: %s\n" "Unexpected DFX_NETWORK value in $JSON_CONFIG:" \
        "Expected: $DFX_NETWORK" \
        "Actual:   $JSON_NETWORK"
      exit 1
    } >&2
    : "Check value in arg"
    ARG_NETWORK="$(idl2json <"$(arg_config)" | jq -r '.[0].args[]|select(.["0"] == "DFX_NETWORK")|.["1"]')"
    [[ "$DFX_NETWORK" == "$ARG_NETWORK" ]] || {
      printf "ERROR: %s\n" "Unexpected DFX_NETWORK value in $(arg_config):" \
        "Expected: $DFX_NETWORK" \
        "Actual:   $ARG_NETWORK"
      exit 1
    } >&2

  done

)
