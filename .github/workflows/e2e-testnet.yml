name: Testnet e2e
on:
  # Pushing one of these branches will trigger a build.
  #
  # One branch name is already defined, you can use that or add your own branch here during development.
  # Please remove additional branch names before merging to the default branch.
  push:
    branches:
      - e2e-testnet
  # Manual trigger, can be run:
  # - From the "Actions" tab in the github UI.
  # - From the cli with:
  #     gh workflow run testnet --ref <BRANCH_TAG_OR_COMMIT>
  #   Note: This works for all branches whereas the UI has more limited options.
  #   Note: If cloning or renaming this workflow, add a push trigger and run this workflow once.
  workflow_dispatch:
    inputs:
      dfx_testnet:
        description: 'dfx testnet name'
        required: true
        default: 'staging'
        type: string
      nns_dapp_canister_id:
        description: 'nns-dapp canister ID'
        required: true
        default: 'qvhpv-4qaaa-aaaaa-aaagq-cai'
        type: string
      ii_canister_id:
        description: 'nns-dapp canister ID'
        required: true
        default: 'qhbym-qaaaa-aaaaa-aaafq-cai'
        type: string
defaults:
  run:
    shell: bash -x -e {0}
jobs:
  testnet:
    runs-on: ubuntu-20.04
    timeout-minutes: 60
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install dependencies
        run: |
          sudo apt-get install -yy moreutils
          sudo snap install yq
      #- name: Set the canister IDs
      #  run: |
      #    FILENAME=canister_ids.json
      #    jq . "$FILENAME" >/dev/null || echo '{}' > "$FILENAME"
      #    jq '. * {(env.DFX_CANISTER_NAME): {(env.DFX_NETWORK): (env.DFX_CANISTER_ID)}}' "$FILENAME" | grep . | sponge "$FILENAME"
      - name: Install dfx
        run: |
          DFX_VERSION="$(jq -r .dfx dfx.json)" sh -ci "$(curl -fsSL https://sdk.dfinity.org/install.sh)"
      - name: Get input vars
        run: |
          # Note: If this is run via workflow_dispatch, defaults are populated as specified in the yaml above.
          #       Otherwise the defaults are not set by gh, so we set them.
          set -x
          # Network name
          DFX_NETWORK="${{ github.event.inputs.dfx_testnet }}"
          DFX_NETWORK="${DFX_NETWORK:-$(yq .on.workflow_dispatch.inputs.dfx_testnet.default .github/workflows/e2e-testnet.yml)}"
          echo DFX_NETWORK="$DFX_NETWORK" | tee /dev/stderr >> $GITHUB_ENV
          # ND canister ID
          ND_CANISTER_ID="${{ github.event.inputs.nns_dapp_canister_id }}"
          ND_CANISTER_ID="${ND_CANISTER_ID:-$(yq .on.workflow_dispatch.inputs.nns_dapp_canister_id.default .github/workflows/e2e-testnet.yml)}" # Used on push; should match the default for manual triggers.
          echo ND_CANISTER_ID="$ND_CANISTER_ID" | tee /dev/stderr >> $GITHUB_ENV
          # II canister ID
          II_CANISTER_ID="${{ github.event.inputs.ii_canister_id }}"
          II_CANISTER_ID="${II_CANISTER_ID:-$(yq .on.workflow_dispatch.inputs.ii_canister_id.default .github/workflows/e2e-testnet.yml)}" # Used on push; should match the default for manual triggers.
          echo II_CANISTER_ID="$II_CANISTER_ID" | tee /dev/stderr >> $GITHUB_ENV
      - name: Set canister IDs
        run: |
          jq . canister_ids.json >/dev/null 2>/dev/null || echo '{}' > canister_ids.json
          jq '.["nns-dapp"][ env.DFX_NETWORK ] = (env.ND_CANISTER_ID)' canister_ids.json | sponge canister_ids.json
          jq '.["internet_identity"][ env.DFX_NETWORK ] = (env.II_CANISTER_ID)' canister_ids.json | sponge canister_ids.json
          cat canister_ids.json
      - name: set-env
        run: ./build-config.sh >> $GITHUB_ENV
      - name: Generate .env configuration for e2e-tests
        run: |
          export ENV_OUTPUT_FILE=./e2e-tests/.env
          ./config.sh
          cat "$ENV_OUTPUT_FILE"
      - name: prepare and run the test suite
        working-directory: e2e-tests
        run: |
          npm ci
          # wipe the screenshots, they will be re-committed
          rm -rf screenshots
          set -o pipefail
          npm run test | tee -a wdio.log
      - name: Archive wdio logs
        if: ${{ always() }}
        uses: actions/upload-artifact@v3
        with:
          name: wdio-logs
          path: e2e-tests/wdio.log
      - name: Archive screenshots
        if: ${{ always() }}
        uses: actions/upload-artifact@v3
        with:
          name: e2e-screenshots
          path: screenshots/**/*.png
