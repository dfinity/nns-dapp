name: E2e test
# We use "push" events so that we have the actual commit. In "pull_request"
# events we get a merge commit with main instead. The merge commit can be
# useful to check that the code would pass tests once merged, but here it just
# creates confusion and doesn't add anything since the branch must be up to
# date before merge. It's also nice to have CI running on branches without PRs.
on:
  push:
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
env:
  NNS_CACHING_KEY: dv-0004
jobs:
  build:
    runs-on: ubuntu-20.04
    timeout-minutes: 60
    steps:
      - name: Checkout nns-dapp
        uses: actions/checkout@v3
      - name: Set up docker buildx
        uses: docker/setup-buildx-action@v2
      - name: Build wasms
        uses: docker/build-push-action@v3
        with:
          context: .
          file: Dockerfile
          build-args: |
            DFX_NETWORK=local
          cache-from: type=gha,scope=cached-stage
          # Exports the artefacts from the final stage
          outputs: .
      - name: Get SNS scripts
        uses: actions/checkout@v3
        with:
          repository: 'dfinity/snsdemo'
          path: 'snsdemo'
          # Version from Mar 17 2023
          ref: 'b9a786a8a4e4afbfede2ecc5af0c2763ee2be774'
      - name: Add SNS scripts to the path
        run: |
          echo "$PWD/snsdemo/bin" >> $GITHUB_PATH
      - name: Install SNS script dependencies
        run: |
          dfx-sns-demo-install
          dfx cache install
      - name: Get node version
        run: jq -r '"NODE_VERSION=\(.defaults.build.config.NODE_VERSION)"' dfx.json >> $GITHUB_ENV
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Deploy NNS and SNS canisters
        run: |
          # Note: This deploys standard NNS canisters but with:
          # - The current code for the nns-dapp
          # - The II version specified in dfx.json
          # - Functional SNS canisters
          ./scripts/dfx-nns-deploy-custom --features sns
      - name: Basic downgrade-upgrade test
        run: |
          git fetch --depth 1 origin tag prod
          if git diff tags/prod rs/backend | grep -q .
          then ./scripts/nns-dapp/downgrade-upgrade-test -w nns-dapp.wasm
          else echo "Skipping test as there are no relevant code changes"
          fi
      - name: 'Upload nns-dapp_local wasm module'
        uses: actions/upload-artifact@v3
        with:
          name: nns-dapp_local
          path: nns-dapp_local.wasm
          retention-days: 3
      - name: Release
        run: |
          for tag in $(git tag --points-at HEAD) ; do
            : Creates or updates a release for the tag
            if gh release view "$tag"
            then gh release upload --repo dfinity/nns-dapp --clobber "$tag" nns-dapp_local.wasm || true
            else gh release create --title "Release for tags/$tag" --draft --notes "Build artefacts from tag: $tag" "$tag" nns-dapp_local.wasm
            fi
            : If the tag is for a proposal, make it public
            [[ "$tag" != proposal-* ]] || { echo "Making release public" ; gh release edit "$tag" --draft=false ; }
          done
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Generate .env configuration for e2e-tests
        run: |
          DFX_NETWORK=local ENV_OUTPUT_FILE=./e2e-tests/.env ./config.sh
      - name: Prepare for e2e tests
        working-directory: e2e-tests
        run: |
          npm ci
          # wipe the screenshots, they will be re-committed
          rm -rf screenshots
      - name: Run chrome e2e tests
        working-directory: e2e-tests
        run: |
          set -o pipefail
          export WDIO_BROWSER=chrome
          SCREENSHOT=1 npm run test |& tee -a chrome-wdio.log
      - name: Run firefox e2e tests
        working-directory: e2e-tests
        run: |
          # Allow Firefox to fail until the source of flakiness is found and fixed.
          # set -o pipefail
          export WDIO_BROWSER=firefox
          SCREENSHOT=1 npm run test |& tee -a firefox-wdio.log
      - name: Get the postinstall instruction count
        run: |
          dfx canister install --upgrade-unchanged nns-dapp --wasm nns-dapp.wasm --mode upgrade
          postinstall_instructions="$(scripts/backend/get_upgrade_instructions)"
          echo "Installation consumed ${postinstall_instructions} instructions."
          echo "Cycles consumed are instructions * some factor that depends on subnet.  There is no guarantee that that formula will not change."
      - name: Stop replica
        run: dfx stop
      - name: Archive wdio logs
        if: ${{ always() }}
        uses: actions/upload-artifact@v3
        with:
          name: wdio-logs
          path: e2e-tests/*-wdio.log
          # Disable screenshot saving until screenshots are stable.
          #      - name: Commit screenshots
          #        if: ${{ github.ref != 'refs/heads/main' }}
          #        uses: EndBug/add-and-commit@v9.1.1
          #        with:
          #          add: e2e-tests/screenshots
          #          author_name: Screenshot Committer
          #          author_email: "<nobody@example.com>"
          #          message: "Update screenshots"
          #          # do not pull: if this branch is behind, then we might as well let
          #          # the pushing fail
          #          pull: "NO-PULL"
          #
      - name: Archive screenshots
        if: ${{ always() }}
        uses: actions/upload-artifact@v3
        with:
          name: e2e-screenshots
          path: e2e-tests/screenshots/**/*.png
          retention-days: 7
      - name: Remove screenshots until they are stable
        working-directory: e2e-tests
        run: |
          rm -rf screenshots
  build-pass:
    needs: ["build"]
    if: ${{ always() }}
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/needs_success
        with:
          needs: '${{ toJson(needs) }}'
