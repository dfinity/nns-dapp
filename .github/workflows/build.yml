# A Native build
# XXX: This makes some of 'checks.yml' redundant. This will be fixed as soon as
# we have end-to-end tests working.
# https://dfinity.atlassian.net/browse/L2-191
name: Native build

# We use "push" events so that we have the actual commit. In "pull_request"
# events we get a merge commit with main instead. The merge commit can be
# useful to check that the code would pass tests once merged, but here it just
# creates confusion and doesn't add anything since the branch must be up to
# date before merge. It's also nice to have CI running on branches without PRs.
on:
  push:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
      NNS_CACHING_KEY: dv-0004

jobs:
  nns_canisters:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - name: set-env
        run: ./build-config.sh >> $GITHUB_ENV

      - name: Get cached nns canisters
        id: create_nns_canister_cache
        uses: actions/cache@v2
        with:
          path: |
            target/ic
          key: "nns-canisters-${{ env.IC_COMMIT }}-${{hashFiles( 'e2e-tests/scripts/nns-canister*' )}}-${{ env.NNS_CACHING_KEY }}"

      - name: Download prebuilt nns canisters
        if: steps.create_nns_canister_cache.outputs.cache-hit != 'true'
        run: ./e2e-tests/scripts/nns-canister-download

      - name: Set up docker buildx
        if: steps.create_nns_canister_cache.outputs.cache-hit != 'true'
        uses: docker/setup-buildx-action@v2

      - name: Build nns canisters
        if: steps.create_nns_canister_cache.outputs.cache-hit != 'true'
        uses: docker/build-push-action@v3
        with:
          context: e2e-tests/scripts
          file: e2e-tests/scripts/nns-canister.Dockerfile
          build-args: |
            "IC_COMMIT=${{ env.IC_COMMIT }}"
          cache-from: type=gha,scope=cached-stage
          cache-to: type=gha,scope=cached-stage,mode=max
          outputs: target/ic

      - name: Show canister versions
        run: sha256sum target/ic/*.wasm

  build:
    needs: [nns_canisters]
    runs-on: ubuntu-20.04
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v3
      - name: set-env
        run: ./build-config.sh >> $GITHUB_ENV

      # Cache based on the Cargo.lock
      # The cache key is always an exact match or no match (i.e. no
      # "restore-keys"-style matching). Because (in case of an exact match)
      # GitHub actions won't (re-)upload the cache after the build, it means that
      # our cache won't just grow forever.
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-build-${{ hashFiles('**/Cargo.lock') }}

      # Cache the ic-cdk-optimizer
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/bin/ic-cdk-optimizer
          key: ${{ runner.os }}-ic-cdk-optimizer-${{ env.IC_CDK_OPTIMIZER_VERSION }}-v2

      - name: Install Software
        run: |
          ./scripts/setup --profile ~/.bashrc
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      # Helps with debugging
      - name: Versions
        run: |
          set -x
          dfx --version
          node --version
          npm --version
          rustc --version
          cargo --version
          ic-cdk-optimizer --version

      - name: Start replica
        run: |
          dfx start --background --clean

      - name: Get cached nns canisters
        id: create_nns_canister_cache
        uses: actions/cache@v2
        with:
          path: |
            target/ic
          key: "nns-canisters-${{ env.IC_COMMIT }}-${{hashFiles( 'e2e-tests/scripts/nns-canister*' )}}-${{ env.NNS_CACHING_KEY }}"
      - name: Show canister versions
        run: sha256sum target/ic/*.wasm
      # IDENTITY_SERVICE_URL needs to match `e2e-tests/test.js`
      - name: Deploy NNS canisters
        run: |
          ./e2e-tests/scripts/nns-canister-install

      - name: Deploy
        run: |
          dfx canister create internet_identity --no-wallet
          dfx canister create nns-dapp --no-wallet
          ./deploy.sh --ii --nns-dapp local
          cp nns-dapp.wasm nns-dapp_local.wasm

      - name: 'Upload nns-dapp_local wasm module'
        uses: actions/upload-artifact@v3
        with:
          name: nns-dapp_local
          path: nns-dapp_local.wasm
          retention-days: 3

      - name: Release
        run: |
          for tag in $(git tag --points-at HEAD) ; do
            : Creates or updates a release for the tag
            if gh release view "$tag"
            then gh release upload --repo dfinity/nns-dapp --clobber "$tag" nns-dapp_local.wasm || true
            else gh release create --title "Release for tags/$tag" --draft --notes "Build artefacts from tag: $tag" "$tag" nns-dapp_local.wasm
            fi
          done
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate .env configuration for e2e-tests
        run: |
          DFX_NETWORK=local ENV_OUTPUT_FILE=./e2e-tests/.env ./config.sh

      - name: Create initial state
        run: |
          ./deploy.sh --populate local

      - name: Build proxy
        working-directory: proxy
        run: |
          npm ci
          npm run build

      - name: prepare and run the test suite
        working-directory: e2e-tests
        run: |
          npm ci

          # wipe the screenshots, they will be re-committed
          rm -rf screenshots
          set -o pipefail
          npm run test | tee -a wdio.log || true

      - name: Stop replica
        run: dfx stop

      - name: Archive wdio logs
        if: ${{ always() }}
        uses: actions/upload-artifact@v3
        with:
          name: wdio-logs
          path: e2e-tests/wdio.log

# Disable screenshot saving until screenshots are stable.
#      - name: Commit screenshots
#        if: ${{ github.ref != 'refs/heads/main' }}
#        uses: EndBug/add-and-commit@v9.1.1
#        with:
#          add: e2e-tests/screenshots
#          author_name: Screenshot Committer
#          author_email: "<nobody@example.com>"
#          message: "Update screenshots"
#          # do not pull: if this branch is behind, then we might as well let
#          # the pushing fail
#          pull: "NO-PULL"
#
      - name: Archive screenshots
        if: ${{ always() }}
        uses: actions/upload-artifact@v3
        with:
          name: e2e-screenshots
          path: screenshots/**/*.png

      - name: Remove screenshots until they are stable
        working-directory: e2e-tests
        run: |
          rm -rf screenshots

  build-pass:
    needs: ["nns_canisters", "build"]
    runs-on: ubuntu-20.04
    steps:
       - name: Build workflow passes
         run: echo OK
