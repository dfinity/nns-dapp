# Verify that the aggregator gets the required data
name: Aggregator aggregates
on:
  push:
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
jobs:
  curl_test:
    runs-on: ubuntu-20.04
    timeout-minutes: 60
    steps:
      - name: Checkout nns-dapp
        uses: actions/checkout@v3
      - name: Install Software
        run: |
          ./scripts/setup --profile ~/.bashrc --noninteractive
          echo "$HOME/.local/bin" >> $GITHUB_PATH
      - name: set-env
        run: ./build-config.sh >> $GITHUB_ENV
      - name: Get SNS scripts
        uses: actions/checkout@v3
        with:
          repository: 'dfinity/snsdemo'
          path: 'snsdemo'
          # Version from Thu Feb 2 2023, includes a placeholder for the sns_aggregator canister ID.
          ref: '4bb32a400cf672950616d82a0fcfc37f79b9d3e4'
      - name: Add SNS scripts to the path
        run: |
          echo "$PWD/snsdemo/bin" >> $GITHUB_PATH
      - name: Install SNS script dependencies
        run: |
          dfx-sns-demo-install
      - name: Deploy NNS and SNS canisters
        run: |
          dfx-sns-demo
      - name: Deploy aggregator
        run: |
          : Claim the canister ID reserved by snsdemo
          dfx-canister-set-id --canister_name sns_aggregator --canister_id q4eej-kyaaa-aaaaa-aaaha-cai
          : Deploy the aggregator
          dfx deploy sns_aggregator
      - name: Get data from the sns aggregator
        run: |
          curl -Lf "http://q4eej-kyaaa-aaaaa-aaaha-cai.localhost:8080/v1/sns/list/latest/slow.json"
      - name: Stop replica
        run: dfx stop
  aggregator-pass:
    needs: ["curl_test"]
    if: ${{ always() }}
    runs-on: ubuntu-20.04
    steps:
      - name: Checks workflow passes
        run: |
          if echo '${{ toJson(needs) }}' | jq 'to_entries[] | select(.value.result != "success")' | grep .
          then echo "You shall not pass:  Some required tests did not succeed"
               exit 1
          else echo "Congratulations, young Frodo."
          fi
