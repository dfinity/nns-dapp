# App deployments are non-production deployments to mainnet.  They are public, can be used as staging, but e.g. funds are real.
name: Deploy to app
on:
  push:
    branches:
      - "deploy-to-app"
  workflow_dispatch:
    inputs:
      mode:
        type: choice
        description: "The dfx canister install mode.  See `dfx canister install --help` for details."
        options:
          - upgrade
          - reinstall
          - install
          - auto
      canisters:
        type: choice
        description: Which canisters to install
        options:
          - all
          - nns-dapp
          - sns_aggregator
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
jobs:
  deploy-app:
    runs-on: ubuntu-latest-m
    timeout-minutes: 60
    env:
      NNS_DAPP_APP_SUBNET_CANISTER_ID: "xnjld-hqaaa-aaaal-qb56q-cai"
      SNS_AGGREGATOR_APP_SUBNET_CANISTER_ID: "otgyv-wyaaa-aaaak-qcgba-cai"
      DFX_NETWORK: app
    steps:
      - name: Checkout nns-dapp
        uses: actions/checkout@v4
        # TODO: This builds, it doesn't use a release.  We probably want at least the option of using releases.
      - name: Get versions
        id: tool_versions
        run: echo "dfx=$(jq -r .dfx dfx.json)" >> "$GITHUB_OUTPUT"
      - name: Get dfx version
        run: echo "DFX_VERSION=$(jq -r .dfx dfx.json)" >> $GITHUB_ENV
      - name: Install dfx
        uses: dfinity/setup-dfx@main
        with:
          dfx-version: ${{ env.DFX_VERSION }}
      - name: Set credentials
        run: |
          printf "%s" "${{ secrets.DFX_IDENTITY_PEM }}" | dfx identity import --storage-mode=plaintext ci /dev/stdin
          dfx identity use ci
        env:
          DFX_IDENTITY_PEM: ${{ secrets.DFX_IDENTITY_PEM }}
      - name: Get SNS scripts
        uses: ./.github/actions/checkout_snsdemo
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up SNS scripts
        run: |
          : Install more
          sudo apt-get update -yy && sudo apt-get install -yy moreutils
          : Add scripts to the path
          echo "$PWD/snsdemo/bin" >> $GITHUB_PATH
      - name: Verify identity
        run: |
          dfx identity whoami
          dfx identity get-principal
      - name: Set nns-dapp canister ID
        run: |
          set -x
          CANISTER_NAME="nns-dapp"
          export DFX_NETWORK CANISTER_NAME
          jq 'del(.canisters[env.CANISTER_NAME].remote.id[env.DFX_NETWORK])' dfx.json | sponge dfx.json
          dfx-canister set-id --network "$DFX_NETWORK" --canister_name "$CANISTER_NAME" --canister_id "$NNS_DAPP_APP_SUBNET_CANISTER_ID"
      - name: Set sns_aggregator canister ID
        run: |
          set -x
          CANISTER_NAME="sns_aggregator"
          export DFX_NETWORK CANISTER_NAME
          jq 'del(.canisters[env.CANISTER_NAME].remote.id[env.DFX_NETWORK])' dfx.json | sponge dfx.json
          DFX_NETWORK="$DFX_NETWORK" jq 'del(.canisters.internet_identity.remote.id[env.DFX_NETWORK])' dfx.json | sponge dfx.json
          dfx-canister set-id --network "$DFX_NETWORK" --canister_name "$CANISTER_NAME" --canister_id "$SNS_AGGREGATOR_APP_SUBNET_CANISTER_ID"
      - name: Log the current state of the canisters
        run: |
          for canister in nns-dapp sns_aggregator ; do
            echo "==== $canister ===="
            set -x
            dfx canister id --network app "$canister"
            dfx canister info --network app "$canister"
            dfx canister status --network app "$canister"
            set +x
          done
