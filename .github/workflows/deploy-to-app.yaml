# App deployments are non-production deployments to mainnet.  They are public, can be used as staging, but e.g. funds are real.
name: Deploy to app
on:
  schedule:
    # Run every Tuesday:
    #   summer: 7pm Zurich time
    #   winter: 8pm Zurich time
    - cron: '0 18 * * 2'
  workflow_dispatch:
  push:
    branches:
      - "deploy-to-app"
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
jobs:
  deploy-app:
    # TODO: When we use a pre-built release, switch to a smaller runner.
    runs-on: ubuntu-latest-m
    timeout-minutes: 60
    env:
      NNS_DAPP_APP_SUBNET_CANISTER_ID: "xnjld-hqaaa-aaaal-qb56q-cai"
    steps:
      - name: Checkout nns-dapp
        uses: actions/checkout@v3
        # TODO: This builds, it doesn't use a release.  We probably want at least the option of using releases.
      - name: Get versions
        id: tool_versions
        run: echo "dfx=$(jq -r .dfx dfx.json)" >> "$GITHUB_OUTPUT"
      - name: Set credentials
        #        uses: aviate-labs/setup-dfx@v0.2.3
        #with:
        #  dfx-version: ${{ steps.tool_versions.outputs.dfx }}
        #  dfx-disable-encryption: true
        run: |
          DFX_VERSION="$(jq -r .dfx dfx.json)" sh -ci "$(curl -fsSL https://sdk.dfinity.org/install.sh)"
          printf "%s" "${{ secrets.DFX_IDENTITY_PEM }}" | dfx identity import --storage-mode=plaintext ci /dev/stdin
          dfx identity use ci
        env:
          DFX_IDENTITY_PEM: ${{ secrets.DFX_IDENTITY_PEM }}
      - name: Verify identity
        run: |
          dfx identity whoami
          dfx identity get-principal
      - name: Build wasms
        uses: ./.github/actions/build_nns_dapp # Builds sns_aggregator as well.
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Deploy nns-dapp
        run: |
          scripts/nns-dapp/split-assets
          dfx canister install --network ic nns-dapp --argument "$(cat out/nns-dapp-arg-mainnet.did)" --wasm out/nns-dapp_noassets.wasm
          ./scripts/nns-dapp/upload-asset-tarball --network ic --chunk out/chunks/assets.xaa.tar.xz
          ./scripts/nns-dapp/upload-asset-tarball --network ic --chunk out/chunks/assets.xab.tar.xz
