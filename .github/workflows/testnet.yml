name: testnet

on:
  workflow_dispatch:
    inputs:
      dfx_testnet:
        description: 'dfx testnet name'
        required: true
        default: 'staging'
        type: string
      nns_dapp_canister_id:
        description: 'nns-dapp canister ID'
        required: true
        default: 'qvhpv-4qaaa-aaaaa-aaagq-cai'
        type: string
      ii_canister_id:
        description: 'nns-dapp canister ID'
        required: true
        default: 'qhbym-qaaaa-aaaaa-aaafq-cai'
        type: string


jobs:
  testnet:
    runs-on: ubuntu-20.04
    timeout-minutes: 60
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install dependencies
        run: |
          sudo apt-get install -yy moreutils
      - name: Set the canister IDs
        run: |
          FILENAME=canister_ids.json
          jq . "$FILENAME" >/dev/null || echo '{}' > "$FILENAME"
          jq '. * {(env.DFX_CANISTER_NAME): {(env.DFX_NETWORK): (env.DFX_CANISTER_ID)}}' "$FILENAME" | grep . | sponge "$FILENAME"
      - name: set-env
        run: ./build-config.sh >> $GITHUB_ENV
      - name: Generate .env configuration for e2e-tests
        run: |
          DFX_NETWORK='${{ env.dfx_testnet }}' ENV_OUTPUT_FILE=./e2e-tests/.env ./config.sh

      - name: prepare and run the test suite
        working-directory: e2e-tests
        run: |
          npm ci
          # wipe the screenshots, they will be re-committed
          rm -rf screenshots
          set -o pipefail
          npm run test | tee -a wdio.log

      - name: Archive wdio logs
        if: ${{ always() }}
        uses: actions/upload-artifact@v3
        with:
          name: wdio-logs
          path: e2e-tests/wdio.log

      - name: Archive screenshots
        if: ${{ always() }}
        uses: actions/upload-artifact@v3
        with:
          name: e2e-screenshots
          path: screenshots/**/*.png
