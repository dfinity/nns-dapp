name: CI Checks

on:
  push:
    branches:
      - main
      - svelte
  pull_request:

jobs:

  formatting:
    runs-on: ubuntu-latest
    env:
      DEPLOY_ENV: mainnet

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install shfmt
        run: sudo snap install shfmt

      - name: Install Rust
        run: |
          rustup update ${{ matrix.rust }} --no-self-update
          rustup default ${{ matrix.rust }}
          rustup component add rustfmt

      - name: Format rust
        run: cargo fmt

      - name: Format shell scripts
        run: ./scripts/fmt-sh

      - name: Install ts dependencies
        run: npm ci
        working-directory: ./frontend/ts
      - name: Format ts
        run: npm run format
        working-directory: ./frontend/ts

      - name: Install svelte dependencies
        run: npm ci
        working-directory: ./frontend/svelte
      - name: Format svelte
        run: npm run format
        working-directory: ./frontend/svelte

      - name: Commit Formatting changes - will not trigger rebuild
        uses: EndBug/add-and-commit@v7.2.0
        if: ${{ github.event_name == 'pull_request' }}
        with:
          add: .
          author_name: Formatting Committer
          author_email: "<nobody@example.com>"
          message: "Updating svelte frontend formatting"
          # do not pull: if this branch is behind, then we might as well let
          # the pushing fail
          pull_strategy: "NO-PULL"


  cargo-tests:
    needs: formatting
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        rust: [ '1.54.0' ]
        os: [ ubuntu-latest ]

    steps:
      - uses: actions/checkout@v2

      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}-1

      - name: Install Rust
        run: |
          rustup update ${{ matrix.rust }} --no-self-update
          rustup default ${{ matrix.rust }}
          rustup target add wasm32-unknown-unknown
          rustup component add clippy

      - name: Create fake assets
        run : |
          touch assets.tar.xz

      - uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --all-targets --all-features -- -D warnings

      - name: Run Tests
        shell: bash
        run: |
          cargo test --all-targets --all-features
        env:
          RUST_BACKTRACE: 1

  flutter-tests:
    needs: formatting
    runs-on: ubuntu-latest
    env:
      DEPLOY_ENV: mainnet

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Compile typescript
        run: npm run build
        working-directory: ./frontend/ts

      - name: Run ESlint
        run: npm run lint
        working-directory: ./frontend/ts

      - name: Run TS tests
        run: npm run test
        working-directory: ./frontend/ts
      
      - name: Flutter setup
        uses: subosito/flutter-action@v1
        with:
          flutter-version: '2.2.3'
          channel: 'stable'

      - run: flutter pub get
        working-directory: ./frontend/dart

      - run: flutter build web --web-renderer canvaskit --release --no-sound-null-safety
        working-directory: ./frontend/dart

      - run: flutter analyze
        working-directory: ./frontend/dart

      - run: flutter test
        working-directory: ./frontend/dart

  svelte-tests:
    needs: formatting
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ./frontend/svelte
    env:
      DEPLOY_ENV: mainnet

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install dependencies
        run: npm ci

      - name: Compile typescript
        run: npm run build

      - name: Run linter
        run: npm run check

  shell-checks:
    needs: formatting
    name: ShellCheck
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Run ShellCheck
      uses: ludeeus/action-shellcheck@master
      env:
        SHELLCHECK_OPTS: -e SC1090 -e SC2119 -e SC1091
