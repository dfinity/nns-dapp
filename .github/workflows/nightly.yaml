name: Nightly Publication
on:
  schedule:
    - cron: "10 * * * *"
  push:
    branches:
      # Commit to the nightly branch and push to test.
      - nightly
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
jobs:
  tag-main:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Preflight checks
        id: preflight
        run: |
          tag_name="$(date +nightly-%Y-%m-%d)"
          echo "tag_name=${tag_name}" >> "$GITHUB_OUTPUT"
          if gh release view "${tag_name}"
          then echo "Skipping as the release already exists"
          elif git tag --points-at HEAD | grep -E '\<nightly-'
          then echo "Skipping as there is already a nightly tag on commit $(git rev-parse HEAD)"
          else echo "need_release=true" >> "$GITHUB_OUTPUT"
          fi
        env:
          GH_TOKEN: ${{ github.token }}
      - name: Set up docker buildx
        if: steps.preflight.outputs.need_release == 'true'
        uses: docker/setup-buildx-action@v2
      # Build and upload testnet assets
      - name: Build nns-dapp Docker image
        if: steps.preflight.outputs.need_release == 'true'
        uses: docker/build-push-action@v3
        with:
          context: .
          file: Dockerfile
          cache-from: type=gha,scope=cached-stage
          outputs: out
          build-args:
            COMMIT: ${{ github.sha }}
      - name: 'Record the git commit and any tags'
        if: steps.preflight.outputs.need_release == 'true'
        run: git log | head -n1 > out/commit.txt
      - name: Tag commit
        if: steps.preflight.outputs.need_release == 'true'
        id: tag
        run: |
          git tag "${{steps.preflight.outputs.tag_name}}"
          if git push origin "refs/tags/${{steps.preflight.outputs.tag_name}}"
          then echo "success=true" >> "$GITHUB_OUTPUT"
          else echo "Abort: Failed to push tag '${{steps.preflight.outputs.tag_name}}'.  It probably already exists, possibly on a different commit."
          fi
      - name: Release
        if: (steps.preflight.outputs.need_release == 'true') && (steps.tag.outputs.success == 'true')
        uses: ./.github/actions/release_nns_dapp
        with:
          assets_dir: 'out'
          token: ${{ secrets.GITHUB_TOKEN }}
  update-ii:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Update II
        run: ./scripts/update-ii
      - name: Commit updated Internet Identity
        uses: EndBug/add-and-commit@v9.1.1
        with:
          add: .
          author_name: Nightly GitHub Action
          author_email: "<nobody@dfinity.org>"
          message: "Update Internet Identity"
          # do not pull: if this branch is behind, then we might as well let
          # the pushing fail
          pull_strategy: "NO-PULL"
  update-chromedriver:
    needs: update-ii # Forces git updates to run sequentially so that they don't conflict.
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Get node version
        run: jq -r '"NODE_VERSION=\(.defaults.build.config.NODE_VERSION)"' dfx.json >> $GITHUB_ENV
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Update chromedriver
        run: |
          node --version
          npm --version
          npm update chromedriver
          git diff package-lock.json
        working-directory: e2e-tests
      - name: Commit updated chromedriver
        uses: EndBug/add-and-commit@v9.1.1
        with:
          add: .
          author_name: Nightly GitHub Action
          author_email: "<nobody@dfinity.org>"
          message: "Update chromedriver"
          # do not pull: if this branch is behind, then we might as well let
          # the pushing fail
          pull_strategy: "NO-PULL"
  nightly-passes:
    needs: ["tag-main", "update-ii", "update-chromedriver"]
    if: ${{ always() }}
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/needs_success
        with:
          needs: '${{ toJson(needs) }}'
