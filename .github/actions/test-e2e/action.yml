name: 'Run Playwright e2e test shard'
description: |
  Set up a test environment and run (a subset of) the Playwright end-to-end tests.
inputs:
  shard_count:
    description: "The total number shards to split the tests into"
    required: false
    default: 1
  shard_number:
    description: "Which of the shards to run"
    required: false
    default: 1
runs:
  using: "composite"
  steps:
    - name: Checkout nns-dapp
      uses: actions/checkout@v3
    - name: Get nns-dapp
      uses: actions/download-artifact@v3
      with:
        name: nns-dapp
    - name: Get sns_aggregator_dev
      uses: actions/download-artifact@v3
      with:
        name: sns_aggregator_dev
    - name: Start snapshot environment
      uses: ./.github/actions/start_dfx_snapshot
      with:
        nns_dapp_wasm: 'nns-dapp.wasm.gz'
        sns_aggregator_wasm: 'sns_aggregator_dev.wasm.gz'
        # Upgrade innstead of reinstall to keep the preloaded SNSes.
        sns_aggregator_install_mode: 'upgrade'
    - name: Generate .env configuration for Playwright end-to-end tests
      shell: bash
      run: |
        DFX_NETWORK=local ./config.sh
    - name: Prepare for Playwright end-to-end tests
      shell: bash
      working-directory: frontend
      run: |
        npm ci
        npx playwright install --with-deps firefox
    - name: Run Playwright end-to-end tests
      shell: bash
      working-directory: frontend
      run: |
        PLAYWRIGHT_BASE_URL="$(../scripts/dfx-canister-url nns-dapp)"
        PLAYWRIGHT_FILES="$(ls ${{ inputs.test_filter }} | cat | split -n r/${{ inputs.shard_number }}/${{ inputs.shard_count }})"
        export PLAYWRIGHT_ARGS PLAYWRIGHT_BASE_URL PLAYWRIGHT_FILES
        npm run test-e2e -- --update-snapshots ${PLAYWRIGHT_FILES:-}
    - name: Upload Playwright results
      uses: actions/upload-artifact@v3
      if: ${{ failure() }}
      with:
        name: playwright-failure-results
        path: |
          frontend/playwright-report/*
          frontend/playwright-results/*
        retention-days: 3
    - name: Check for screenshot changes
      id: check-screenshots
      run: |
        if ! git diff --quiet frontend/src/tests/e2e/snapshots; then
          echo "Screenshots have changed! To update your local repo run:"
          echo "  scripts/update-e2e-screenshots --job ${{ github.run_id }}"
        fi
    - name: Upload screenshots
      if: ${{ failure() }}
      uses: actions/upload-artifact@v3
      name: updated-screenshots
      path: $(git diff --name-only frontend/src/tests/e2e/snapshots)
    - name: Stop replica
      shell: bash
      run: dfx stop
