name: 'Run Playwright e2e test shard'
description: |
  Set up a test environment and run (a subset of) the Playwright end-to-end tests.
inputs:
  test_filter:
    descripts: "Pattern to select which tests to run"
    required: false
    default: "*.spec.ts"
  shard_count:
    description: "The total number shards to split the tests into"
    required: false
    default: 1
  shard_number:
    description: "Which of the shards to run"
    required: false
    default: 1
runs:
  using: "composite"
  steps:
    - name: Checkout nns-dapp
      uses: actions/checkout@v4
    - name: Get nns-dapp
      uses: actions/download-artifact@v4
      with:
        name: nns-dapp
    - name: Get sns_aggregator_dev
      uses: actions/download-artifact@v4
      with:
        name: sns_aggregator_dev
    - name: Start snapshot environment
      uses: ./.github/actions/start_dfx_snapshot
      with:
        nns_dapp_wasm: 'nns-dapp.wasm.gz'
        sns_aggregator_wasm: 'sns_aggregator_dev.wasm.gz'
        # Upgrade instead of reinstall to keep the preloaded SNSs.
        sns_aggregator_install_mode: 'upgrade'
    - name: Generate .env configuration for Playwright end-to-end tests
      shell: bash
      run: |
        DFX_NETWORK=local ./config.sh
    - name: Prepare for Playwright end-to-end tests
      shell: bash
      working-directory: frontend
      run: |
        npm ci
        npx playwright install --with-deps firefox
    - name: Run Playwright end-to-end tests
      shell: bash
      working-directory: frontend
      run: |
        export PLAYWRIGHT_BASE_URL="$(../scripts/dfx-canister-url nns-dapp)"
        PLAYWRIGHT_FILES="$(ls src/tests/e2e/${{ inputs.test_filter }} | cat | split -n r/${{ inputs.shard_number }}/${{ inputs.shard_count }})"
        npm run test-e2e -- --update-snapshots ${PLAYWRIGHT_FILES:-}
    - name: List Playwright results
      if: ${{ failure() }}
      shell: bash
      # The playwright-failure-results artifact often ends up containing nothing
      # but index.html. List the files we expect to be there to pin down what's
      # going wrong.
      run: |
        find frontend/playwright-*
    - name: Upload Playwright results
      uses: actions/upload-artifact@v4
      if: ${{ failure() }}
      with:
        name: playwright-failure-results
        path: |
          frontend/playwright-report/*
          frontend/playwright-results/*
        retention-days: 3
    - name: Check for screenshot changes
      shell: bash
      id: check-screenshots
      run: |
        if ! git diff --quiet -- frontend/src/tests/e2e/screenshots; then
          echo "screenshots<<EOF" >> "$GITHUB_OUTPUT"
          git diff --name-only -- frontend/src/tests/e2e/screenshots >> "$GITHUB_OUTPUT"
          echo "EOF" >> "$GITHUB_OUTPUT"
        fi
    - name: Upload screenshots
      if: ${{ steps.check-screenshots.outputs.screenshots }}
      uses: actions/upload-artifact@v4
      with:
        name: updated-screenshots
        path: |
          ${{ steps.check-screenshots.outputs.screenshots }}
        retention-days: 3
    - name: Fail if screenshots changed
      if: ${{ steps.check-screenshots.outputs.screenshots }}
      shell: bash
      # Fail in order to force updating the screenshots explicitly.
      run: |
        echo "Screenshots have changed:"
        git diff --name-only -- frontend/src/tests/e2e/screenshots
        echo
        echo "To update your local repo run:"
        echo "  scripts/update-e2e-screenshots --run_id ${{ github.run_id }}"
        exit 1
    - name: Stop replica
      shell: bash
      run: dfx stop
